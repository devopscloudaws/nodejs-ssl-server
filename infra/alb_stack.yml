#ALB Template
---
AWSTemplateFormatVersion: "2010-09-09"
Description: ALB stack including Security Group, ALB, Target Groups, and Listeners

Parameters:
  RegionName:
    Type: String
    Description: Region name to import VPC-related exports (e.g., us-east-1, ap-south-1)

Resources:
  CMS3ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allows HTTP and HTTPS Traffic"
      VpcId: !ImportValue 
        Fn::Sub: CMS3-VPC-ID-${RegionName}
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: CMS3ALBSecurityGroup

  CMS3HTTPTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue 
        Fn::Sub: "CMS3-VPC-ID-${RegionName}"
      Protocol: HTTP
      Port: 80
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Tags:
        - Key: Name
          Value: CMS3HTTPTargetGroup

  CMS3HTTPSTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue 
        Fn::Sub: CMS3-VPC-ID-${RegionName}
      Protocol: HTTPS
      Port: 443
      TargetType: ip
      HealthCheckProtocol: HTTPS
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Tags:
        - Key: Name
          Value: CMS3HTTPSTargetGroup

  CMSNodejsTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !ImportValue 
        Fn::Sub: CMS3-VPC-ID-${RegionName}
      Protocol: HTTP
      Port: 8080
      TargetType: instance
      HealthCheckProtocol: HTTP
      HealthCheckPath: /
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Tags:
        - Key: Name
          Value: CMSNodejsTargetGroup

  CMS3ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Name: CMS3ApplicationLoadBalancer
      SecurityGroups:
        - !Ref CMS3ALBSecurityGroup
      Subnets:
        - !ImportValue 
            Fn::Sub: CMS3-PublicSubnet-1-${RegionName}
        - !ImportValue 
            Fn::Sub: CMS3-PublicSubnet-2-${RegionName}
      Scheme: internet-facing
      Type: application

  CMS3ALBHTTPSListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref CMS3ApplicationLoadBalancer
      Protocol: HTTPS
      Port: 443
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref CMS3HTTPSTargetGroup
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:722136401996:certificate/44fa3ab7-f45f-493c-9be0-20936f308f26

  CMS3NodejsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref CMS3ApplicationLoadBalancer
      Protocol: HTTP
      Port: 8080
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref CMSNodejsTargetGroup

Outputs:
  CMSNodejsTargetGroupARN:
    Description: Node.js Target Group ARN
    Value: !Ref CMSNodejsTargetGroup
    Export:
      Name: !Sub "CMS3-NodejsTargetGroup-${RegionName}"

  ALBSecurityGroupId:
    Description: Security Group ID for ALB
    Value: !Ref CMS3ALBSecurityGroup
    Export:
      Name: !Sub "CMS3-ALB-SG-${RegionName}"

  ALBArn:
    Description: ALB ARN
    Value: !Ref CMS3ApplicationLoadBalancer
    Export:
      Name: !Sub "CMS3-ALB-ARN-${RegionName}"

