version: 0.2

env:
  variables:
    REGIONS: "us-east-1 ap-southeast-1"

phases:
  install:
    commands:
      - echo "üì¶ Installing dependencies..."

  pre_build:
    commands:
      - echo "üîê Logging into DockerHub..."
      - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

      - echo "üîç Retrieving AWS Account ID..."
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)

      - echo "üîê Logging into ECR in all target regions..."
      - |
        for REGION in $REGIONS; do
          aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
        done


  build:
    commands:
      - |
        for REGION in $REGIONS; do
          echo "üåé Processing region: $REGION"
          
          if [[ "$REGION" == "us-east-1" ]]; then
            CERT_ARN=$CERT_ARN_US_EAST_1
          elif [[ "$REGION" == "ap-southeast-1" ]]; then
            CERT_ARN=$CERT_ARN_AP_SOUTHEAST_1
          else
            echo "‚ùå Unsupported region: $REGION"
            exit 1
          fi

          if [[ -z "$CERT_ARN" ]]; then
            echo "‚ùå SSL certificate ARN for $REGION is not set. Failing build..."
            exit 1
          fi

          echo "üöÄ Deploying ALB Stack in $REGION..."
          aws cloudformation deploy \
            --region $REGION \
            --stack-name alb-stack-$REGION \
            --template-file infra/alb_stack.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              VpcExportName=CMS3VPC \
              PublicSubnet1ExportName=CMS3PublicSubnet1 \
              PublicSubnet2ExportName=CMS3PublicSubnet2 \
              SSLCertificateArn=$CERT_ARN \
              TargetGroupExportName=CMSNodejsTargetGroup \
              ALBDNSExportName=CMS3-ALB-DNS-$REGION || exit 1

          echo "‚úÖ ALB stack deployed in $REGION."
        done

      # Gather ALB DNS outputs
      - echo "üì• Fetching ALB DNS names..."
      - |
        ALB_DNS_US_EAST_1=$(aws cloudformation describe-stacks --region us-east-1 --stack-name alb-stack-us-east-1 \
          --query "Stacks[0].Outputs[?OutputKey=='ALBDNS'].OutputValue" --output text)
        ALB_DNS_AP_SOUTHEAST_1=$(aws cloudformation describe-stacks --region ap-southeast-1 --stack-name alb-stack-ap-southeast-1 \
          --query "Stacks[0].Outputs[?OutputKey=='ALBDNS'].OutputValue" --output text)

      # Deploy WAF + CloudFront (only in us-east-1)
      - |
        if [[ "$REGIONS" == *"us-east-1"* ]]; then
          echo "üöÄ Deploying WAF + CloudFront stack in us-east-1..."
          aws cloudformation deploy \
            --region us-east-1 \
            --stack-name waf-cloudfront-stack-us-east-1 \
            --template-file infra/waf_cloudfront_stack.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              ALBDNSUSEast1=$ALB_DNS_US_EAST_1 \
              ALBDNSAPSoutheast1=$ALB_DNS_AP_SOUTHEAST_1 || exit 1
        else
          echo "‚ö†Ô∏è us-east-1 not in target regions. Skipping CloudFront deployment."
        fi

artifacts:
  files:
    - '**/*'
