version: 0.2

env:
  variables:
    REGIONS: "us-east-1 ap-southeast-1"
    KEY_NAME: "cms-ec2-key"
    TARGET_GROUP_EXPORT: "CMSNodejsTargetGroup"
    VPC_EXPORT_NAME: "CMS3VPC"
    PUBLIC_SUBNET1_EXPORT: "CMS3PublicSubnet1"
    PUBLIC_SUBNET2_EXPORT: "CMS3PublicSubnet2"

phases:
  install:
    runtime-versions:
      nodejs: 20
  pre_build:
    commands:
      - echo Logging in to DockerHub...
      - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - echo Logging into ECR in all target regions...
      - |
        for REGION in $REGIONS; do
          aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
        done

  build:
    commands:
      - echo "ðŸš€ Deploying VPC Stack..."
      - |
        for REGION in $REGIONS; do
          echo "Deploying VPC in $REGION"
          aws cloudformation deploy \
            --region $REGION \
            --stack-name vpc-stack-$REGION \
            --template-file infra/vpc_template.yaml \
            --capabilities CAPABILITY_NAMED_IAM || exit 1
        done

      - echo "ðŸš€ Deploying ALB Stack..."
      - |
        for REGION in $REGIONS; do
          echo "Checking if ALB stack exists in $REGION..."
          STACK_EXISTS=$(aws cloudformation describe-stacks --region $REGION --stack-name alb-stack-$REGION --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo "NOT_FOUND")
          if [ "$STACK_EXISTS" != "NOT_FOUND" ]; then
            echo "âœ… ALB Stack already exists in $REGION, skipping..."
            continue
          fi

          if [ "$REGION" = "us-east-1" ]; then
            SSLCERTIFICATEARN="arn:aws:acm:us-east-1:722136401996:certificate/xxxxxxxxxxxxxxxx"
          elif [ "$REGION" = "ap-southeast-1" ]; then
            SSLCERTIFICATEARN="arn:aws:acm:ap-southeast-1:722136401996:certificate/yyyyyyyyyyyyyyyy"
          fi

          echo "Deploying ALB in $REGION"
          aws cloudformation deploy \
            --region $REGION \
            --stack-name alb-stack-$REGION \
            --template-file infra/alb_stack.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              VpcExportName=$VPC_EXPORT_NAME \
              PublicSubnet1ExportName=$PUBLIC_SUBNET1_EXPORT \
              PublicSubnet2ExportName=$PUBLIC_SUBNET2_EXPORT \
              SSLCertificateArn=$SSLCERTIFICATEARN \
              TargetGroupExportName=$TARGET_GROUP_EXPORT \
              ALBDNSExportName=CMS3-ALB-DNS-$REGION || exit 1
        done

      - echo "ðŸš€ Deploying ECS Stack..."
      - |
        for REGION in $REGIONS; do
          echo "Checking if ECS stack exists in $REGION..."
          STACK_EXISTS=$(aws cloudformation describe-stacks --region $REGION --stack-name ecs-stack-$REGION --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo "NOT_FOUND")
          if [ "$STACK_EXISTS" != "NOT_FOUND" ]; then
            echo "âœ… ECS Stack already exists in $REGION, skipping..."
            continue
          fi

          echo "Deploying ECS in $REGION"
          aws cloudformation deploy \
            --region $REGION \
            --stack-name ecs-stack-$REGION \
            --template-file infra/ecs_stack.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              KeyName=$KEY_NAME \
              TargetGroupExportName=$TARGET_GROUP_EXPORT || exit 1
        done

      - echo "ðŸš€ Deploying CloudFront + WAF..."
      - |
        echo "Getting ALB DNS names from both regions..."
        ALB_DNS_USEAST1=$(aws cloudformation list-exports --region us-east-1 --query "Exports[?Name=='CMS3-ALB-DNS-us-east-1'].Value" --output text)
        ALB_DNS_APSOUTHEAST1=$(aws cloudformation list-exports --region ap-southeast-1 --query "Exports[?Name=='CMS3-ALB-DNS-ap-southeast-1'].Value" --output text)

        for REGION in $REGIONS; do
          echo "Deploying CloudFront + WAF in $REGION..."
          aws cloudformation deploy \
            --region $REGION \
            --stack-name waf-cloudfront-stack-$REGION \
            --template-file infra/waf_cloudfront_stack.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              ALBDNSUSEast1=$ALB_DNS_USEAST1 \
              ALBDNSAPSoutheast1=$ALB_DNS_APSOUTHEAST1 || exit 1
        done
